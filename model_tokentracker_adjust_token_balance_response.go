/*
Token Tracker Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokentracker

import (
	"encoding/json"
)

// checks if the TokentrackerAdjustTokenBalanceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokentrackerAdjustTokenBalanceResponse{}

// TokentrackerAdjustTokenBalanceResponse struct for TokentrackerAdjustTokenBalanceResponse
type TokentrackerAdjustTokenBalanceResponse struct {
	NewBalance *string `json:"newBalance,omitempty"`
}

// NewTokentrackerAdjustTokenBalanceResponse instantiates a new TokentrackerAdjustTokenBalanceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokentrackerAdjustTokenBalanceResponse() *TokentrackerAdjustTokenBalanceResponse {
	this := TokentrackerAdjustTokenBalanceResponse{}
	return &this
}

// NewTokentrackerAdjustTokenBalanceResponseWithDefaults instantiates a new TokentrackerAdjustTokenBalanceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokentrackerAdjustTokenBalanceResponseWithDefaults() *TokentrackerAdjustTokenBalanceResponse {
	this := TokentrackerAdjustTokenBalanceResponse{}
	return &this
}

// GetNewBalance returns the NewBalance field value if set, zero value otherwise.
func (o *TokentrackerAdjustTokenBalanceResponse) GetNewBalance() string {
	if o == nil || IsNil(o.NewBalance) {
		var ret string
		return ret
	}
	return *o.NewBalance
}

// GetNewBalanceOk returns a tuple with the NewBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokentrackerAdjustTokenBalanceResponse) GetNewBalanceOk() (*string, bool) {
	if o == nil || IsNil(o.NewBalance) {
		return nil, false
	}
	return o.NewBalance, true
}

// IsSetNewBalance returns a boolean if a field has been set.
func (o *TokentrackerAdjustTokenBalanceResponse) IsSetNewBalance() bool {
	if o != nil && !IsNil(o.NewBalance) {
		return true
	}

	return false
}

// SetNewBalance gets a reference to the given string and assigns it to the NewBalance field.
func (o *TokentrackerAdjustTokenBalanceResponse) SetNewBalance(v string) {
	o.NewBalance = &v
}

func (o TokentrackerAdjustTokenBalanceResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokentrackerAdjustTokenBalanceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewBalance) {
		toSerialize["newBalance"] = o.NewBalance
	}
	return toSerialize, nil
}

type NullableTokentrackerAdjustTokenBalanceResponse struct {
	value *TokentrackerAdjustTokenBalanceResponse
	isSet bool
}

func (v NullableTokentrackerAdjustTokenBalanceResponse) Get() *TokentrackerAdjustTokenBalanceResponse {
	return v.value
}

func (v *NullableTokentrackerAdjustTokenBalanceResponse) Set(val *TokentrackerAdjustTokenBalanceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTokentrackerAdjustTokenBalanceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTokentrackerAdjustTokenBalanceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokentrackerAdjustTokenBalanceResponse(val *TokentrackerAdjustTokenBalanceResponse) *NullableTokentrackerAdjustTokenBalanceResponse {
	return &NullableTokentrackerAdjustTokenBalanceResponse{value: val, isSet: true}
}

func (v NullableTokentrackerAdjustTokenBalanceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokentrackerAdjustTokenBalanceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


