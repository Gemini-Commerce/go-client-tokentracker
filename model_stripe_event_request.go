/*
Token Tracker Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokentracker

import (
	"encoding/json"
)

// checks if the StripeEventRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StripeEventRequest{}

// StripeEventRequest struct for StripeEventRequest
type StripeEventRequest struct {
	Id *string `json:"id,omitempty"`
	IdempotencyKey *string `json:"idempotencyKey,omitempty"`
}

// NewStripeEventRequest instantiates a new StripeEventRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStripeEventRequest() *StripeEventRequest {
	this := StripeEventRequest{}
	return &this
}

// NewStripeEventRequestWithDefaults instantiates a new StripeEventRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStripeEventRequestWithDefaults() *StripeEventRequest {
	this := StripeEventRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StripeEventRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripeEventRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// IsSetId returns a boolean if a field has been set.
func (o *StripeEventRequest) IsSetId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *StripeEventRequest) SetId(v string) {
	o.Id = &v
}

// GetIdempotencyKey returns the IdempotencyKey field value if set, zero value otherwise.
func (o *StripeEventRequest) GetIdempotencyKey() string {
	if o == nil || IsNil(o.IdempotencyKey) {
		var ret string
		return ret
	}
	return *o.IdempotencyKey
}

// GetIdempotencyKeyOk returns a tuple with the IdempotencyKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripeEventRequest) GetIdempotencyKeyOk() (*string, bool) {
	if o == nil || IsNil(o.IdempotencyKey) {
		return nil, false
	}
	return o.IdempotencyKey, true
}

// IsSetIdempotencyKey returns a boolean if a field has been set.
func (o *StripeEventRequest) IsSetIdempotencyKey() bool {
	if o != nil && !IsNil(o.IdempotencyKey) {
		return true
	}

	return false
}

// SetIdempotencyKey gets a reference to the given string and assigns it to the IdempotencyKey field.
func (o *StripeEventRequest) SetIdempotencyKey(v string) {
	o.IdempotencyKey = &v
}

func (o StripeEventRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StripeEventRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IdempotencyKey) {
		toSerialize["idempotencyKey"] = o.IdempotencyKey
	}
	return toSerialize, nil
}

type NullableStripeEventRequest struct {
	value *StripeEventRequest
	isSet bool
}

func (v NullableStripeEventRequest) Get() *StripeEventRequest {
	return v.value
}

func (v *NullableStripeEventRequest) Set(val *StripeEventRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStripeEventRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStripeEventRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStripeEventRequest(val *StripeEventRequest) *NullableStripeEventRequest {
	return &NullableStripeEventRequest{value: val, isSet: true}
}

func (v NullableStripeEventRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStripeEventRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


